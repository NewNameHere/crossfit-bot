# main.py
# Telegram-–±–æ—Ç —Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Render.

import os
import asyncio
import threading
import random
from datetime import datetime, time, timedelta

from flask import Flask
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery

from trainings import trainings

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
API_TOKEN = "8129538051:AAFf27Hn0cWvTLDjbnTEtY9sTvpx_VIjRyU"
CHAT_ID = 246801537

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
motivational_phrases = [
    "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.",
    "–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üí™",
    "–ú–æ–ª–æ–¥–µ—Ü! –ï—â–µ –æ–¥–∏–Ω —à–∞–≥ –∫ —Ü–µ–ª–∏.",
    "–í–ø–µ—Ä–µ–¥ –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º!",
    "–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è, –≥–æ—Ä–¥–∏–º—Å—è —Ç–æ–±–æ–π! ‚úÖ"
]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ"
@dp.callback_query(F.data == "done")
async def on_done_button(callback: CallbackQuery):
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" —É –∫–Ω–æ–ø–∫–∏
    await callback.answer()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É –≤ –æ—Ç–≤–µ—Ç
    phrase = random.choice(motivational_phrases)
    await callback.message.reply(phrase)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π
async def send_daily_message():
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–∞—É–∑—É –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ 6:30 UTC (9:30 –ø–æ –ú–æ—Å–∫–≤–µ)
    now = datetime.utcnow()
    target_time = datetime.combine(now.date(), time(6, 30))
    if now > target_time:
        target_time += timedelta(days=1)
    wait_seconds = (target_time - now).total_seconds()
    # –û–∂–∏–¥–∞–µ–º –¥–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    await asyncio.sleep(wait_seconds)
    # –ü–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è ‚Äì —Ü–∏–∫–ª –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    while True:
        # –ë–µ—Ä–µ–º –æ—á–µ—Ä–µ–¥–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
        training = trainings[send_daily_message.current_index]
        title = training["title"]
        desc = training["description"]
        text = f"{title}\\n\\n{desc}"
        # –ö–Ω–æ–ø–∫–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ" –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("–í—ã–ø–æ–ª–Ω–µ–Ω–æ ‚úÖ", callback_data="done")]
        ])
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π
        await bot.send_message(CHAT_ID, text, reply_markup=keyboard)
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ (—Ü–∏–∫–ª–∏—á–Ω–æ –ø–æ —Å–ø–∏—Å–∫—É)
        send_daily_message.current_index = (send_daily_message.current_index + 1) % len(trainings)
        # –ñ–¥–µ–º 24 —á–∞—Å–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
        await asyncio.sleep(24 * 60 * 60)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Ü–∏–∫–ª–∏—á–Ω–æ–≥–æ –ø–µ—Ä–µ–±–æ—Ä–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
send_daily_message.current_index = 0

# –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    asyncio.create_task(send_daily_message())
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–¥–æ–ª–≥–æ–ø–æ–ª–ª–∏–Ω–≥ Telegram)
    await dp.start_polling(bot, skip_updates=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def start_bot():
    asyncio.run(main())

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è Render)
app = Flask(__name__)

@app.route("/")
def index():
    return "Bot is running"

# –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ –∏ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –±–æ—Ç–∞
if __name__ == "__main__":
    bot_thread = threading.Thread(target=start_bot, daemon=True)
    bot_thread.start()
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
